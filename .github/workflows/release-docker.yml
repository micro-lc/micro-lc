name: Docker container release

on:
  workflow_call:
    inputs:
      push:
        default: false
        required: false
        type: boolean
    secrets:
      docker_username:
        required: true
      docker_token:
        required: true
      nexus_username:
        required: true
      nexus_token:
        required: true
      sysdig_token:
        required: true
      kms_gcp_project:
        required: false
      gcp_wif:
        required: false
      cosign_key:
        required: false

jobs:
  release-docker:
    name: Build web-server docker container
    permissions:
      actions: read
      contents: write
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      checksum: ${{ steps.docker-container-id.outputs.checksum }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #Â v5.0.0
      with:
        show-progress: false
    - name: Download Build Artifacts
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: packages-build
        path: packages/
    - name: Docker Login to DockerHub
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        username: ${{ secrets.docker_username }}
        password: ${{ secrets.docker_token }}
    - name: Login to Mia registry
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: nexus.mia-platform.eu
        username: ${{ secrets.nexus_username }}
        password: ${{ secrets.nexus_token }}
    - name: Install Cosign
      uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      with:
        platforms: amd64,arm64
    - name: Configure docker metadata
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      env:
        DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      with:
        images: |
          docker.io/microlc/micro-lc
          nexus.mia-platform.eu/microlc/micro-lc
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
        labels: |
          org.opencontainers.image.documentation=https://micro-lc.io/
          org.opencontainers.image.vendor=Mia s.r.l.
        annotations: |
          org.opencontainers.image.documentation=https://micro-lc.io/
          org.opencontainers.image.vendor=Mia s.r.l.
    - name: Setup Buildx Context
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      id: buildx
      with:
        platforms: linux/amd64,linux/arm64
    - name: Build test image
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: .
        file: ./.docker/Dockerfile
        load: true
        tags: local/microlc:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
      env:
        DOCKER_BUILD_SUMMARY: false
    - name: Test image
      run: |
        cat > "${FOLDER_PATH}/csp.html" <<EOF
        **CSP_NONCE**
        EOF

        export CONTAINER_NAME="microlc"
        docker run \
          --detach \
          --rm \
          --publish 8080:8080 \
          --name "${CONTAINER_NAME}" \
          --env NGINX_ENTRYPOINT_QUIET_LOGS="" \
          --volume "${FOLDER_PATH}/csp.html":"/usr/static/csp.html" \
          "local/microlc:${COMMIT_SHA}"

        curl --retry 5 --retry-delay 1 --retry-all-errors --fail "http://127.0.0.1:8080/index.html" > /dev/null
        export CSP=$(curl --retry 5 --retry-delay 1 --retry-all-errors --fail "http://127.0.0.1:8080/csp.html")

        docker logs "${CONTAINER_NAME}"
        docker stop "${CONTAINER_NAME}"
        [[ "${CSP}" != "**CSP_NONCE**" ]] && exit 0 || exit 1
      env:
        FOLDER_PATH: ${{ github.workspace }}
        COMMIT_SHA: ${{ github.sha }}
    - name: Build Docker Image
      id: docker-build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: .
        file: ./.docker/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        platforms: ${{ steps.buildx.outputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Scan image
      uses: sysdiglabs/scan-action@f82dfca019814742e751f7e5118cc107b0a14acb # v6.1.3
      with:
        image-tag: nexus.mia-platform.eu/microlc/micro-lc:${{ steps.meta.outputs.version }}
        sysdig-secure-url: "https://eu1.app.sysdig.com"
        sysdig-secure-token: ${{ secrets.sysdig_token }}
        registry-user: ${{ secrets.nexus_username }}
        registry-password: ${{ secrets.nexus_token }}
        stop-on-processing-error: true
    - name: Generate SBOM
      uses: anchore/sbom-action@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # v0.20.6
      if: ${{ inputs.push && ( github.ref_type == 'tag') }}
      with:
        artifact-name: micro-lc-sbom.spdx.json
        output-file: ./micro-lc-sbom.spdx.json
        image: nexus.mia-platform.eu/microlc/micro-lc:${{ steps.meta.outputs.version }}
        upload-release-assets: true
    - name: GCP Auth
      uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093 # v3.0.0
      if: ${{ inputs.push && ( github.ref_type == 'tag') }}
      with:
        project_id: ${{ secrets.kms_gcp_project }}
        workload_identity_provider: ${{ secrets.gcp_wif }}
        create_credentials_file: true
    - name: Sign image with a key
      if: ${{ inputs.push && ( github.ref_type == 'tag') }}
      run: |
        for tag in ${TAGS}; do
          image="${tag}@${DIGEST}"
          cosign sign --recursive --yes --key "${COSIGN_PRIVATE_KEY}" "${image}"
          cosign attest --yes --key "${COSIGN_PRIVATE_KEY}" --predicate "micro-lc-sbom.spdx.json" --type="spdxjson" "${image}"
        done
      env:
        TAGS: |
          docker.io/microlc/micro-lc:${{ steps.meta.outputs.version }}
          nexus.mia-platform.eu/microlc/micro-lc:${{ steps.meta.outputs.version }}
        DIGEST: ${{ steps.docker-build.outputs.digest }}
        COSIGN_PRIVATE_KEY: ${{ secrets.cosign_key }}
